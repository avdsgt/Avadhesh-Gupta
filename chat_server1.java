package chats1;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import javax.swing.JOptionPane;

/**
 *
 * @author AVADHESH
 */
public class chat_server1 extends javax.swing.JFrame {

    public static ServerSocket ss;
    public static Socket s;
    public static DataInputStream din;
    public static DataOutputStream dout;
    public static String str = "0a1b2c3d4e5f6g7h8i9jklmnopqrstuvwxyz0a1b2c3d4e5f6g7h8i9jklmnopqrstuvwxyz";
    public static String str1 = "abcdefghijklmnopqrstuvwxyz";
    public static String str2 = "qwertyuiopasdfghjklzxcvbnm";

    /**
     * Creates new form chat_server1
     */
    public chat_server1() {
        initComponents();
    }

    private void print1() {
        try {
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        msg_area = new javax.swing.JTextArea();
        msg_text = new javax.swing.JTextField();
        msg_send = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnselect = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        msg_plain = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        msg_cipher = new javax.swing.JTextArea();
        msg_clear = new javax.swing.JButton();
        msg_decrypt = new javax.swing.JButton();
        msg_encrypt = new javax.swing.JButton();
        combo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        msg_area.setColumns(20);
        msg_area.setRows(5);
        jScrollPane1.setViewportView(msg_area);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(286, 11, 243, 108));

        msg_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_textActionPerformed(evt);
            }
        });
        getContentPane().add(msg_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 137, 470, 29));

        msg_send.setBackground(new java.awt.Color(66, 212, 244));
        msg_send.setText("Send");
        msg_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_sendActionPerformed(evt);
            }
        });
        getContentPane().add(msg_send, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 406, 70, 32));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Server Side Chatting");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

        jLabel6.setText("Algorithms");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 38, -1, -1));

        btnselect.setText("Select");
        btnselect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnselectActionPerformed(evt);
            }
        });
        getContentPane().add(btnselect, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 73, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("*Enter Your Text Here");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 114, -1, -1));

        jLabel5.setText("Text");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 144, -1, -1));

        jLabel3.setText("Plain Text");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 184, -1, -1));

        jLabel4.setText("Cipher Text");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(293, 184, -1, -1));

        msg_plain.setColumns(20);
        msg_plain.setRows(5);
        jScrollPane2.setViewportView(msg_plain);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 209, 190, 152));

        msg_cipher.setColumns(20);
        msg_cipher.setRows(5);
        jScrollPane3.setViewportView(msg_cipher);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(293, 209, 188, 152));

        msg_clear.setBackground(new java.awt.Color(66, 212, 244));
        msg_clear.setText("Clear");
        msg_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_clearActionPerformed(evt);
            }
        });
        getContentPane().add(msg_clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 406, -1, 32));

        msg_decrypt.setBackground(new java.awt.Color(66, 212, 244));
        msg_decrypt.setText("Decrypt");
        msg_decrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_decryptActionPerformed(evt);
            }
        });
        getContentPane().add(msg_decrypt, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 406, 70, 32));

        msg_encrypt.setBackground(new java.awt.Color(66, 212, 244));
        msg_encrypt.setText("Encrypt");
        msg_encrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_encryptActionPerformed(evt);
            }
        });
        getContentPane().add(msg_encrypt, new org.netbeans.lib.awtextra.AbsoluteConstraints(298, 406, 70, 32));

        combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Caesar Cipher", "Railfence Cipher", "Mono Alphabetic" }));
        combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboActionPerformed(evt);
            }
        });
        getContentPane().add(combo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 140, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void msg_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msg_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_msg_textActionPerformed

    private void btnselectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnselectActionPerformed
        try {
            print1();
            String choice = combo.getSelectedItem() + "";
            msg_area.setText("\nYou Selected-:" + choice);
            dout.writeUTF(choice);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnselectActionPerformed

    private void msg_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msg_sendActionPerformed
        // TODO add your handling code here:
        try {

            String msgout = "";
            msgout = msg_text.getText().trim();
            dout.writeUTF(msgout);
        } catch (Exception e) {
        }

    }//GEN-LAST:event_msg_sendActionPerformed

    private void msg_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msg_clearActionPerformed

        int YesorNo = JOptionPane.showConfirmDialog(null, "Do You Want To Clear TextField", "Clear TextField", JOptionPane.YES_NO_OPTION);
        if (YesorNo == JOptionPane.YES_OPTION) {
            msg_area.setText("");
            msg_text.setText("");
            msg_cipher.setText("");
            msg_plain.setText("");
        }

    }//GEN-LAST:event_msg_clearActionPerformed

    private void msg_decryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msg_decryptActionPerformed
        try {
            int cmb = combo.getSelectedIndex();
            if (cmb == 0) {
                String otpt4 = "";
                String s2 = msg_text.getText();
                String sl = s2.toLowerCase();
                int ishift = 3;
                for (int i = 0; i < sl.length(); i++) {
                    for (int j = 36; j < 72; j++) {
                        if (sl.charAt(i) == str.charAt(j)) {
                            otpt4 += str.charAt(j - ishift);
                            msg_plain.setText(otpt4);
                        }
                    }
                }
            } else if (cmb == 1) {
                String cipherText = msg_text.getText();
                int depth = 2;
                int r = depth, len = cipherText.length();
                int c = len / depth;
                char mat[][] = new char[r][c];
                int k = 0;
                String plainText = "";
                for (int i = 0; i < r; i++) {
                    for (int j = 0; j < c; j++) {
                        mat[i][j] = cipherText.charAt(k++);
                    }
                }
                for (int i = 0; i < c; i++) {
                    for (int j = 0; j < r; j++) {
                        plainText += mat[j][i];
                    }
                }
                msg_plain.setText(plainText);
            } else if (cmb == 2) {
                String otpt5 = "";
                String plaintext = msg_text.getText();
                for (int i = 0; i < plaintext.length(); i++) {
                    for (int j = 0; j < 26; j++) {
                        if (plaintext.charAt(i) == str2.charAt(j)) {
                            otpt5 += str1.charAt(j);
                        }
                    }
                }
                msg_plain.setText(otpt5);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_msg_decryptActionPerformed

    private void msg_encryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msg_encryptActionPerformed
        try {
            int cmb = combo.getSelectedIndex();
            if (cmb == 0) {
                String otpt1 = "";
                String s1 = msg_text.getText();
                String s = s1.toLowerCase();
                int ishift = 3;
                for (int i = 0; i < s.length(); i++) {
                    for (int j = 0; j < 36; j++) {
                        if (s.charAt(i) == str.charAt(j)) {
                            otpt1 += str.charAt(j + ishift);
                            msg_cipher.setText(otpt1);
                        }
                    }
                }
                dout.writeUTF(otpt1);

            } else if (cmb == 1) {
                 String plainText = msg_text.getText();
                String otpt2 = "";
                int depth = 2;
                int r = depth, len = plainText.length();
                int c = len / depth;
                char mat[][] = new char[r][c];
                int k = 0;
                 for (int i = 0; i < c; i++) {
                    for (int j = 0; j < r; j++) {
                        if (k != len) {
                            mat[j][i] = plainText.charAt(k++);
                        } else {
                            mat[j][i] = 'x';
                        }
                    }
                }
                for (int i = 0; i < r; i++) {
                    for (int j = 0; j < c; j++) {
                        otpt2 += mat[i][j];
                        System.out.println(mat[i][j]);
                    }
                }
                msg_cipher.setText(otpt2);
                dout.writeUTF(otpt2);
            } else if (cmb == 2) {
                String otpt3 = "";
                String p = msg_text.getText();
                String plaintext = p.toLowerCase();
                for (int i = 0; i < plaintext.length(); i++) {
                    for (int j = 0; j < 26; j++) {
                        if (plaintext.charAt(i) == str1.charAt(j)) {
                            otpt3 += str2.charAt(j);
                        }
                    }
                }
                msg_cipher.setText(otpt3);
                dout.writeUTF(otpt3);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_msg_encryptActionPerformed

    private void comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboActionPerformed
        String ciphers = (String) combo.getSelectedItem();
    }//GEN-LAST:event_comboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(chat_server1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(chat_server1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(chat_server1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(chat_server1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new chat_server1().setVisible(true);
            }
        });
        String msgin = "";
        try {
            ss = new ServerSocket(6666);
            s = ss.accept();
            din = new DataInputStream(s.getInputStream());
            dout = new DataOutputStream(s.getOutputStream());
            while (!msgin.equals("exit")) {
                msgin = din.readUTF();
                msg_area.setText(msg_area.getText() + msgin); //Display the Message ....From Client 
                msg_text.setText(msg_area.getText());
            }
        } catch (Exception e) {
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnselect;
    private static javax.swing.JComboBox<String> combo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private static javax.swing.JTextArea msg_area;
    public static javax.swing.JTextArea msg_cipher;
    private javax.swing.JButton msg_clear;
    private javax.swing.JButton msg_decrypt;
    public static javax.swing.JButton msg_encrypt;
    private javax.swing.JTextArea msg_plain;
    private javax.swing.JButton msg_send;
    public static javax.swing.JTextField msg_text;
    // End of variables declaration//GEN-END:variables
}
